<!-- App.xaml -->
<Application x:Class="ChessWPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!-- Global Chess-themed Brushes -->
        <SolidColorBrush x:Key="AccentBrush" Color="#FFB400"/>
        <!-- Rich gold accent -->
        <SolidColorBrush x:Key="CardBrush" Color="#3D3A35"/>
        <!-- Dark wood tone -->
        <SolidColorBrush x:Key="InputBrush" Color="#4A4A47"/>
        <!-- Muted gray for inputs -->
        <SolidColorBrush x:Key="BoardLight" Color="#F0D9B5"/>
        <!-- Chessboard light square -->
        <SolidColorBrush x:Key="BoardDark"  Color="#B58863"/>
        <!-- Chessboard dark square -->

        <!-- Navigation Button Style -->
        <Style x:Key="NavButtonStyle" TargetType="Button">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="{DynamicResource CardBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Input Box Style -->
        <Style x:Key="InputBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource InputBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="0,5,0,15"/>
        </Style>
        <Style x:Key="InputBoxStylePwd" TargetType="PasswordBox">
            <Setter Property="Background" Value="{DynamicResource InputBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="0,5,0,15"/>
        </Style>
        <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="{DynamicResource InputBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="0,5,0,15"/>

            <!-- Make the drop-down list use the same dark card brush -->
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Background" Value="{DynamicResource CardBrush}"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="Margin" Value="0"/>
                        <Style.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>